{"ast":null,"code":"var _jsxFileName = \"D:\\\\Facultate\\\\AN3\\\\TehnoWeb\\\\teme\\\\webtech-tema-4\\\\main\\\\src\\\\components\\\\RobotForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RobotForm({\n  onAddRobot\n}) {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    type: '',\n    mass: ''\n  });\n  const handleChange = e => {\n    const {\n      id,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [id]: value\n    }));\n  };\n  const handleAdd = () => {\n    const mass = parseFloat(formData.mass);\n    onAddRobot({\n      name: formData.name || '',\n      type: formData.type || '',\n      mass: isNaN(mass) || mass < 500 ? '' : mass.toString()\n    });\n    setFormData({\n      name: '',\n      type: '',\n      mass: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"name\",\n      placeholder: \"name\",\n      value: formData.name,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"type\",\n      placeholder: \"type\",\n      value: formData.type,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"mass\",\n      placeholder: \"mass\",\n      value: formData.mass,\n      onChange: handleChange,\n      type: \"number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAdd,\n      value: \"add\",\n      children: \"add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(RobotForm, \"Qg486anGBxR077dkcd97klcW+F8=\");\n_c = RobotForm;\nexport default RobotForm;\nvar _c;\n$RefreshReg$(_c, \"RobotForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RobotForm","onAddRobot","_s","formData","setFormData","name","type","mass","handleChange","e","id","value","target","prev","handleAdd","parseFloat","isNaN","toString","children","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/Facultate/AN3/TehnoWeb/teme/webtech-tema-4/main/src/components/RobotForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction RobotForm({ onAddRobot }) {\r\n  const [formData, setFormData] = useState({ name: '', type: '', mass: '' });\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [id]: value }));\r\n  };\r\n\r\n  const handleAdd = () => {\r\n    const mass = parseFloat(formData.mass);\r\n    onAddRobot({\r\n      name: formData.name || '',\r\n      type: formData.type || '',\r\n      mass: isNaN(mass) || mass < 500 ? '' : mass.toString(),\r\n    });\r\n    setFormData({ name: '', type: '', mass: '' });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input id=\"name\" placeholder=\"name\" value={formData.name} onChange={handleChange} />\r\n      <input id=\"type\" placeholder=\"type\" value={formData.type} onChange={handleChange} />\r\n      <input id=\"mass\" placeholder=\"mass\" value={formData.mass} onChange={handleChange} type=\"number\" />\r\n      <button onClick={handleAdd} value=\"add\">add</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RobotForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,SAASA,CAAC;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EACjC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IAAEQ,IAAI,EAAE,EAAE;IAAEC,IAAI,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC;EAE1E,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,EAAE;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAC9BR,WAAW,CAAES,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACH,EAAE,GAAGC;IAAM,CAAC,CAAC,CAAC;EACnD,CAAC;EAED,MAAMG,SAAS,GAAGA,CAAA,KAAM;IACtB,MAAMP,IAAI,GAAGQ,UAAU,CAACZ,QAAQ,CAACI,IAAI,CAAC;IACtCN,UAAU,CAAC;MACTI,IAAI,EAAEF,QAAQ,CAACE,IAAI,IAAI,EAAE;MACzBC,IAAI,EAAEH,QAAQ,CAACG,IAAI,IAAI,EAAE;MACzBC,IAAI,EAAES,KAAK,CAACT,IAAI,CAAC,IAAIA,IAAI,GAAG,GAAG,GAAG,EAAE,GAAGA,IAAI,CAACU,QAAQ,CAAC;IACvD,CAAC,CAAC;IACFb,WAAW,CAAC;MAAEC,IAAI,EAAE,EAAE;MAAEC,IAAI,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAG,CAAC,CAAC;EAC/C,CAAC;EAED,oBACER,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAOW,EAAE,EAAC,MAAM;MAACS,WAAW,EAAC,MAAM;MAACR,KAAK,EAAER,QAAQ,CAACE,IAAK;MAACe,QAAQ,EAAEZ;IAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpFzB,OAAA;MAAOW,EAAE,EAAC,MAAM;MAACS,WAAW,EAAC,MAAM;MAACR,KAAK,EAAER,QAAQ,CAACG,IAAK;MAACc,QAAQ,EAAEZ;IAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpFzB,OAAA;MAAOW,EAAE,EAAC,MAAM;MAACS,WAAW,EAAC,MAAM;MAACR,KAAK,EAAER,QAAQ,CAACI,IAAK;MAACa,QAAQ,EAAEZ,YAAa;MAACF,IAAI,EAAC;IAAQ;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClGzB,OAAA;MAAQ0B,OAAO,EAAEX,SAAU;MAACH,KAAK,EAAC,KAAK;MAAAO,QAAA,EAAC;IAAG;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEV;AAACtB,EAAA,CA1BQF,SAAS;AAAA0B,EAAA,GAAT1B,SAAS;AA4BlB,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}